// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entities "ropc-service/model/entities"

	mock "github.com/stretchr/testify/mock"
)

// ClientService is an autogenerated mock type for the ClientService type
type ClientService struct {
	mock.Mock
}

// CreateClient provides a mock function with given fields: client
func (_m *ClientService) CreateClient(client *entities.Client) {
	_m.Called(client)
}

// GetClients provides a mock function with given fields:
func (_m *ClientService) GetClients() []entities.Client {
	ret := _m.Called()

	var r0 []entities.Client
	if rf, ok := ret.Get(0).(func() []entities.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entities.Client)
		}
	}

	return r0
}

type mockConstructorTestingTNewClientService interface {
	mock.TestingT
	Cleanup(func())
}

// NewClientService creates a new instance of ClientService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClientService(t mockConstructorTestingTNewClientService) *ClientService {
	mock := &ClientService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
