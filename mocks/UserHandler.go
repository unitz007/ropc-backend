// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// UserHandler is an autogenerated mock type for the UserHandler type
type UserHandler struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: w, r
func (_m *UserHandler) CreateUser(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetUserDetails provides a mock function with given fields: w, r
func (_m *UserHandler) GetUserDetails(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

type mockConstructorTestingTNewUserHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserHandler creates a new instance of UserHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserHandler(t mockConstructorTestingTNewUserHandler) *UserHandler {
	mock := &UserHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
